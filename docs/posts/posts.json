[
  {
    "path": "posts/2022-02-16-project4/",
    "title": "Principal component analysis for environmental and climatic variables",
    "description": "Materials from ESM 244",
    "author": [
      {
        "name": "Tiffany Hsu",
        "url": {}
      }
    ],
    "date": "2022-03-03",
    "categories": [],
    "contents": "\nOverview\nWe seek to understand relationships between environmental and climate variables of countries by performing dimension reduction through principal component analysis (PCA). We create a biplot of (PCA) for the variables by region. Variables explored in the report include annual mean rainfall, annual mean temperatures, cloudiness, cropland cover, tree canopy cover, elevation, and accessibility to cities.\nData wrangling\n\n\nhide\n\n#load datasets\nenv_vars <- read_csv(here(\"data/world_env_vars.csv\"))\n\n#drop all rows including NAs\nenv_vars_drop_na <- read_csv(here(\"data/world_env_vars.csv\")) %>% \n  drop_na()\n\n# wrangle continents data\n\ncontinents <- read_csv(here(\"data/continents2.csv\")) %>% \n  mutate(\"Country\" = name) %>% \n  select(Country, region)\n\nenv_vars_region <- inner_join(env_vars_drop_na, continents, by = \"Country\")\n\n# convert\n#env_vars_region$Country <- as.numeric(as.factor(env_vars_region$Country))\n\nenv_vars_pca <- env_vars_region %>%\n  #select(accessibility_to_cities:slope) %>% \n  select(accessibility_to_cities, elevation, cropland_cover, tree_canopy_cover, rain_mean_annual, temp_mean_annual, cloudiness) %>% \n  scale() %>% \n  prcomp()\n\n#summary(env_vars_pca)\n\n# Importance of components:\n#                           PC1    PC2    PC3    PC4     PC5\n# Standard deviation     1.2930 1.1502 0.9979 0.8019 0.60511\n# Proportion of Variance 0.3344 0.2646 0.1992 0.1286 0.07323\n# Cumulative Proportion  0.3344 0.5990 0.7982 0.9268 1.00000\n\n\n\nVisualizing PCA through a biplot\n\n\nhide\n\n### ggfortify::autoplot -autoplot uses ggplot to make a plot for specific data types (ie PCA)\n\nautoplot(env_vars_pca,\n        data = env_vars_region,\n        loadings = TRUE,\n        colour = 'region',\n        loadings.label = TRUE,\n        loadings.label.size = 3,\n        loadings.colour = \"black\",\n        loadings.label.colour = \"black\",\n        loadings.label.vjust = -2.5,\n        loadings.label.fontface = \"bold\",\n        size = 2,\n        alpha = 0.6\n        ) +\n  scale_color_manual(values = c(\"dodgerblue\",\"chartreuse\",\"magenta\", \"slateblue1\", \"darkorange\")) +\n  # scale_fill_manual(values = c(\"dodgerblue\",\"chartreuse\",\"magenta\", \"slateblue1\", \"darkorange\")) +\n  theme_minimal() + \n  theme(text = element_text(family = \"Palatino\"),\n       axis.text = element_text(face = \"bold\"),\n       axis.title = element_text(face = \"bold\")) + \n  labs(title = \"Principal Component Analysis\")\n\n\n\n\nFigure 1: Biplot of principal components analysis (PCA) for environmental and climatic variables by region\nCountries are represented based on their aggregate scores across annual mean rainfall, annual mean temperatures, cloudiness, cropland cover, tree canopy cover, elevation, and accessibility to cities. The arrows indicate how each variable is increasing in each direction. The countries are color-coded by region.\nTakeaways:\nEurope mainly clusters around cropland cover, relative to the first two principal components.\nAnnual mean rainfall, tree canopy cover, and cloudiness reveal the most variance.\nAnnual mean rainfall and tree canopy cover are very closely correlated due to their close proximity within one another. This makes sense because tree cover and growth may be explained by increased rainfall and water availability.\nAnnual mean temperature and cropland cover are negatively correlated because they are almost directly across from one another.\nAccessibility to cities and cropland cover are also negatively correlated. Thus, the more accessible a city is, the less crop cover there is.\nCloudiness shows no correlation with annual mean temperatures, accessibility to cities, or cropland cover.\nElevation shows negative correlation with annual mean rainfall and tree canopy cover.\nData Sources:\nEnvironmental and climate variable data compiled and provided by @zander_venter on Kaggle, described as: “This data is all acquired through Google Earth Engine (https://earthengine.google.com/) where publicly available remote sensing datasets have been uploaded…Most of the data is derived by calculating the mean for each country at a reduction scale of about 10km.”\nContinent data compiled and provided by @Andrana Olteanu on Kaggle, described as: Dataset was taken from lukes on GitHub: https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/blob/master/all/all.csv. https://www.kaggle.com/andradaolteanu/country-mapping-iso-continent-region\n\n\n\n",
    "preview": "posts/2022-02-16-project4/project4_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-03-03T14:50:27-08:00",
    "input_file": "project4.knit.md"
  },
  {
    "path": "posts/2022-02-16-project3/",
    "title": "Female lizard lengths by species!",
    "description": "Materials from ESM 206",
    "author": [
      {
        "name": "Tiffany Hsu",
        "url": {}
      }
    ],
    "date": "2022-02-24",
    "categories": [],
    "contents": "\nIntroduction\nThis analysis seeks to compare the total lengths of female Colorado Checkered and Desert Grassland lizard species with data provided by Jornada Basin LTER. Further, the length comparison is examined through performing a t-test and calculating differences between groups through Cohen’s d effect size.\n\n\nhide\n\n#read in data\nlizards <- read_csv(here(\"data\", \"lizards.csv\"))\n\n#only include species (CNTE, CNUN),  sex (female), and total length\nclean_lizards <- lizards %>% \n  select(\"spp\", \"sex\", \"total_length\") %>% \n  filter(sex == \"F\") %>% \n  filter(spp %in% c(\"CNUN\", \"CNTE\"))\n\n\n\nVisualization\n\n\nhide\n\n# visualizing\n\nggplot(clean_lizards, aes(x = spp, y = total_length)) +\n  geom_jitter(aes(color = spp),\n              show.legend = TRUE) +\n  stat_summary(fun.y = \"mean\",\n               fill = \"goldenrod4\",\n               col = \"black\",\n               shape = 2) +\n  scale_x_discrete(labels = c(\"Desert Grassland Lizard\", \"Colorado Checkered Lizard\")) +\n    labs(title = \"Figure 1. Female Desert Grassland  vs. Colorado Checkered lizard lengths\",\n       x = \"Species\",\n       y = \"Length (mm)\",\n       color = \"Species\") +\n  theme(plot.title = element_text(face = \"bold\", hjust = .5, size = 12),\n        legend.position = \"none\",\n        plot.caption.position = \"plot\",\n        plot.caption = element_text(hjust = 0.5)) +\n  theme_minimal() +\n  scale_colour_manual(values = c(\"orange\", \"steelblue2\"))\n\n\n\n\nFigure 1. Lengths of female lizards by species. Comparing total lengths of female Desert Grassland (orange) and Colorado Checkered (blue) lizard species with data collected at the Jornada Basin LTER. The triangle indicates the mean lengths for each species of female lizards. Data: Lightfoot 2017.\nTable 1. Descriptive statistics.\nSample size, mean, and standard deviation comparing the total lengths of female lizards by species, Cnemidophorus tessalatus (Desert Grassland) and Cnemidophorus uniparens (Colorado Checkered). Data: Lightfoot 2017.\n\n\nhide\n\n# Prepare a finalized summary table that contains the mean and standard deviation for total length, and sample size, for each group (female CNUN and CNTE lizards)\n\nlizards_summary <- clean_lizards %>% \n  mutate(species = case_when(\n    spp == \"CNTE\" ~ \"Desert Grassland Lizard\",\n    spp == \"CNUN\" ~ \"Colorado Checkered Lizard\")) %>% \n  group_by(species) %>% \n  summarize(mean = round(mean(total_length, na.rm = TRUE), 2),\n            sd = round(sd(total_length, na.rm = TRUE), 2),\n            sample_size = n())\n\nlizards_summary_table <- lizards_summary %>% \n  kbl(caption = \"<center><strong>Table 1: Female Desert Grassland and Colorado Checkered Lizards<\/strong><\/center>\",\n      col = c(\"Species\", \"Mean (mm)\", \"Standard Deviation (mm)\", \"Sample Size (n)\")) %>% \n  kable_paper(\"hover\",\n              full_width = F,\n              position = \"center\")\n\nlizards_summary_table\n\n\n\nTable 1: \n\nTable 1: Female Desert Grassland and Colorado Checkered Lizards\n\n\n\nSpecies\n\n\nMean (mm)\n\n\nStandard Deviation (mm)\n\n\nSample Size (n)\n\n\nColorado Checkered Lizard\n\n\n147.60\n\n\n34.55\n\n\n47\n\n\nDesert Grassland Lizard\n\n\n244.89\n\n\n47.32\n\n\n28\n\n\n\n\nhide\n\n# T-test code: \n\n# Pull vectors of weights for two lizards species CNTE and CNUN\n\ncnte <- clean_lizards %>% \n  filter(spp == \"CNTE\") %>% \n  pull(total_length) #pulls vectors for cnte lizards\n\ncnun <- clean_lizards %>% \n  filter(spp == \"CNUN\") %>% \n  pull(total_length) #pulls vectors for cnun lizards\n\n# Plot histograms & qq-plots to check assumptions\n#hist(cnte) # Looks normal\n#qqnorm(cnte) # Relatively linear, a little curvy\n#hist(cnun) # Possibly a bit positively skewed\n#qqnorm(cnun) # Looks very linear\n\n# Assume normality\n\n# Run the t-test:\nlength_ttest <- t.test(cnte, cnun)\n\n# Get the tidy model results to call outputs in-line: \nlength_ttest_tidy <- tidy(length_ttest)\n\n# Means & SDs for cnte and cnun species: \ncnte_mean <- mean(cnte)\ncnun_mean <- mean(cnun)\ncnte_sd <- sd(cnte)\ncnun_sd <- sd(cnun)\n\n# Get the effect size: \nlength_effsize <- cohen.d(cnte, cnun, na.rm = TRUE)\n\n\n\nMean lengths for female Colorado Checkered lizards (mean = 147.60 mm, sd = 34.55 mm, n = 47) are lower than the lengths of female Desert Grassland lizards (mean = 244.89 mm, sd = 47.32 mm, n = 28). The actual difference in means is 97.29mm. According to the t-test, Cohen’s d = 2.42 reveals a large effect size, which supports that there is a significant difference between the average mean female CNTE and CNUN lizard lengths (t = 9.28, p < 0).\nData Source: Lightfoot, D. 2017. Lizard pitfall trap data (LTER-II, LTER-III) ver 36. Environmental Data Initiative. https://doi.org/10.6073/pasta/ff37b4cace16a9943575f3fd7067064e\n\n\n\n",
    "preview": "posts/2022-02-16-project3/project3_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-03-03T14:46:22-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-01-22-welcome/",
    "title": "Palmetto binary logistic regression!",
    "description": "Materials from ESM 244",
    "author": [
      {
        "name": "Tiffany Hsu",
        "url": {}
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\nObjective:\nIn this task, we use binary logistic regression to find the probabilities that the palmetto species is serenoa repens or Sabal etonis based on plant height (height), canopy length (length), canopy width (width), and number of green leaves (green_lvs). The data is provided by the Archbold Biological Station in Florida.\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(broom)\nlibrary(caret)\nlibrary(AICcmodavg)\nlibrary(kableExtra)\nlibrary(patchwork)\nlibrary(ggthemes)\n\n\n\nData Wrangling\n\n\nhide\n\n#load data\npalmetto <- read_csv(here(\"data\", \"palmetto.csv\")) \n\npalmetto_subset <- palmetto %>% \n  select(species, height, length, width, green_lvs) %>% \n  mutate(species = case_when(\n    species == 1 ~ \"Serenoa repens\",\n    species == 2 ~ \"Sabal etonia\")) %>% \n  drop_na()\n\n#convert species to a factor\npalmetto_subset$species <- as.factor(palmetto_subset$species)\n#class(palmetto_subset$species \n#levels(palmetto_subset$species)\n\n\n\nExploratory analysis\nExploring differences in height (cm), canopy length (cm), canopy width (cm), and green leaves for the two species to find trends.\n\n\nhide\n\n# palmetto_subset <- palmetto %>% \n#   select(species, height:green_lvs)\n\nheight <- palmetto_subset %>% \n  ggplot(aes(x = species, y = height, fill = species)) +\n  geom_boxplot(alpha = 0.8) +\n  scale_fill_manual(values = c(\"chartreuse4\",\"violetred3\")) +\n  theme_solarized() + \n  theme(text = element_text(family = \"Palatino\"),\n         axis.text = element_text(face = \"bold\"),\n         axis.title = element_text(face = \"bold\"),\n         legend.position = \"none\") + \n  labs(x = \"\",\n       y = \"\",\n       title = \"Plant height (cm)\")\n\nlength <- palmetto_subset %>% \n  ggplot(aes(x = species, y = length, fill = species)) +\n  geom_boxplot(alpha = 0.8) +\n  scale_fill_manual(values = c(\"chartreuse4\",\"violetred3\")) +\n  theme_solarized() + \n  theme(text = element_text(family = \"Palatino\"),\n         axis.text = element_text(face = \"bold\"),\n         axis.title = element_text(face = \"bold\"),\n         legend.position = \"none\") + \n  labs(x = \"\",\n       y = \"\",\n       title = \"Canopy length (cm)\")\n\n\nwidth <- palmetto_subset %>% \n  ggplot(aes(x = species, y = width, fill = species)) +\n  geom_boxplot(alpha = 0.8) +\n  scale_fill_manual(values = c(\"chartreuse4\",\"violetred3\")) +\n  theme_solarized() + \n  theme(text = element_text(family = \"Palatino\"),\n         axis.text = element_text(face = \"bold\"),\n         axis.title = element_text(face = \"bold\"),\n         legend.position = \"none\") + \n  labs(x = \"\",\n       y = \"\",\n       title = \"Canopy width (cm)\")\n\n\ngreen_leaves <- palmetto_subset %>% \n  ggplot(aes(x = species, y = green_lvs, fill = species)) +\n  geom_boxplot(alpha = 0.8) +\n  scale_fill_manual(values = c(\"chartreuse4\",\"violetred3\")) +\n  theme_solarized() + \n  theme(text = element_text(family = \"Palatino\"),\n         axis.text = element_text(face = \"bold\"),\n         axis.title = element_text(face = \"bold\"),\n         legend.position = \"none\") + \n  labs(x = \"\",\n       y = \"\",\n       title = \"Green leaf count\")\n\nheight + length + width + green_leaves # use patchwork to display as one plot\n\n\n\n\nFigure 1: The plots compare plant height, canopy length, canopy width, and number of green leaves between two palmetto species, Sabal etonia and Serenoa repens. Focusing on the distance between the distributions, the number of green leaves appear to be the most helpful in classifying among the two species. Canopy length appears to be the second-most helpful, followed by canopy width, and plant height, respectively.\nData analysis: Binary Logistic Regression\nModel 1:\nLog odds of plant type using plant height, canopy length, canopy width and green leaves as predictor variable.\n\n\nhide\n\nf1 <- species ~ height + length + width + green_lvs\n\nmodel1 <- glm(formula = f1,\n              data = palmetto_subset,\n              family = \"binomial\")\n\n### Get a tidy version w/ broom:\nblr1_tidy <- broom::tidy(model1) %>% \n  mutate(p.value = case_when(p.value < 0.001 ~ \"< 0.001\"))\n\nblr1_tidy %>% \n  kbl(caption = \"Table 1: Binary Logistic Regression for Species Prediction Results\") %>% \n  kable_styling(bootstrap_options = \"hover\", full_width = FALSE)\n\n\n\nTable 1: Table 1: Binary Logistic Regression for Species Prediction Results\n\n\nterm\n\n\nestimate\n\n\nstd.error\n\n\nstatistic\n\n\np.value\n\n\n(Intercept)\n\n\n-3.2266851\n\n\n0.1420708\n\n\n-22.71180\n\n\n< 0.001\n\n\nheight\n\n\n0.0292173\n\n\n0.0023061\n\n\n12.66984\n\n\n< 0.001\n\n\nlength\n\n\n-0.0458233\n\n\n0.0018661\n\n\n-24.55600\n\n\n< 0.001\n\n\nwidth\n\n\n-0.0394434\n\n\n0.0021000\n\n\n-18.78227\n\n\n< 0.001\n\n\ngreen_lvs\n\n\n1.9084747\n\n\n0.0388634\n\n\n49.10728\n\n\n< 0.001\n\n\nModel 2:\nLog odds of plant type using plant height, canopy width and green leaves.\n\n\nhide\n\nf2 <- species ~ height + width + green_lvs\n\nmodel2 <- glm(formula = f2,\n              data = palmetto_subset,\n              family = \"binomial\")\n\nblr2_fitted <- model2 %>%\n  broom::augment(type.predict = \"response\")\n\nblr2_tidy <- broom::tidy(model2)\n\n\n\nModel selection:\nComparing by AIC\n\n\nhide\n\naic <- AICcmodavg::aictab(list(model1, model2)) \n\naic %>% \n  kable(caption = \"Summary statistics for AIC\") %>% \n  kable_styling(bootstrap_options = \"hover\", full_width = FALSE)\n\n\n\nTable 2: Summary statistics for AIC\n\n\nModnames\n\n\nK\n\n\nAICc\n\n\nDelta_AICc\n\n\nModelLik\n\n\nAICcWt\n\n\nLL\n\n\nCum.Wt\n\n\nMod1\n\n\n5\n\n\n5194.567\n\n\n0.0000\n\n\n1\n\n\n1\n\n\n-2592.281\n\n\n1\n\n\nMod2\n\n\n4\n\n\n5987.475\n\n\n792.9086\n\n\n0\n\n\n0\n\n\n-2989.736\n\n\n1\n\n\nComparing by cross-validation, using prediction accuracy as the metric\n\n\nhide\n\nset.seed(42)\n# tr_ctrl <- trainControl(method = \"cv\", number = 10)\ntr_ctrl <- trainControl(method = \"repeatedcv\", number = 10, repeats = 10)\n\n# Train the model\nmodel1_cv <- train(f1, data = palmetto_subset,\n               method = \"glm\", family = 'binomial',\n               trControl = tr_ctrl)\n\n#table for model1 cv results\nmodel1_cv$results[2:3] %>%\n  kbl(caption = \"Model 1 CV Results\",\n      col.names = c(\"Accuracy\", \"Kappa\")) %>% \n  kable_styling(bootstrap_options = \"hover\", full_width = FALSE)\n\n\n\nTable 3: Model 1 CV Results\n\n\nAccuracy\n\n\nKappa\n\n\n0.9170051\n\n\n0.8339975\n\n\nhide\n\nmodel2_cv <- train(f2, data = palmetto_subset,\n               method = \"glm\", family = 'binomial',\n               trControl = tr_ctrl)\n\n# create table to summarize CV results from each model\nmodel2_cv$results[2:3] %>%\n  kbl(caption = \"Model 2 CV Results\",\n      col.names = c(\"Accuracy\", \"Kappa\")) %>% \n  kable_styling(bootstrap_options = \"hover\", full_width = FALSE)\n\n\n\nTable 3: Model 2 CV Results\n\n\nAccuracy\n\n\nKappa\n\n\n0.8988176\n\n\n0.797617\n\n\nResults:\nIn comparison to model two, model one yields a lower AIC score which reveals itself as the better model. \\(\\delta\\) 792.90862 indicates a significant difference in model fit despite having one extra parameter. Thus, plant height (height), canopy length (length), canopy width (width), and number of green leaves (green_lvs) are relevant predictors of palmetto species. Results from cross-validation also indicate a better performance from model one (91.7% Accuracy) in comparison to model two (89.9% Accuracy).\nSpecies classification accuracy\n\n\nhide\n\n# determine fitted predictions for our data\nblr1_fitted <- model1 %>%\n  broom::augment(type.predict = \"response\")\n\n# classify as correct or incorrect \nblr1_predicted <- blr1_fitted %>%\n  mutate(predicted_species = case_when(\n    .fitted >= 0.5 ~ \"Serenoa repens\",\n    .fitted < 0.5 ~ \"Sabal etonia\")) %>% \n  mutate(correct = case_when(\n    species == predicted_species ~ \"correct\",\n    species != predicted_species ~ \"incorrect\"))\n\n# create summary of prediction accuracy\nsummary_predictions <- blr1_predicted %>% \n   count(species, correct) %>% # count how many were classified correctly/incorrectly\n  pivot_wider(names_from = correct, \n              values_from = n) %>% \n  mutate(percent_correct = round(correct/(incorrect + correct) * 100, 2)) # % correct\n\n# create summary table\nsummary_predictions %>% \n  kbl(caption = \"Table 2: Species prediction outcome based off a 50% cutoff for classification\") %>% \n  kable_styling(bootstrap_options = \"hover\", full_width = FALSE)\n\n\n\nTable 4: Table 2: Species prediction outcome based off a 50% cutoff for classification\n\n\nspecies\n\n\ncorrect\n\n\nincorrect\n\n\npercent_correct\n\n\nSabal etonia\n\n\n5701\n\n\n454\n\n\n92.62\n\n\nSerenoa repens\n\n\n5548\n\n\n564\n\n\n90.77\n\n\nConclusion\nThe final model is able to classify 1.85% better on Sabal etonia species than on Serenoa repens. Model one, which included plant height, canopy length, canopy width and green leaves as predictor variables yielded high accuracy values for the palmetto species classification.\nData citation:\nAbrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\n\n\n\n",
    "preview": "posts/2022-01-22-welcome/welcome_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-02-16T09:41:28-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-16-project2/",
    "title": "USGS water timeseries!",
    "description": "Materials from ENVS 193SW",
    "author": [
      {
        "name": "Tiffany Hsu",
        "url": {}
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\nThe data for this lab are available from the United States Geological Survey for years 1950-2015.\nData Wrangling\nLoad libraries\n\n\nhide\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\nlibrary(readxl)\nlibrary(sf)\nlibrary(USAboundaries)\nlibrary(scales) \nlibrary(ggthemes) \nlibrary(gghighlight) \nlibrary(ggnewscale)\nlibrary(USAboundaries)\nlibrary(sf)\n\n\n\nLoad data\n\n\nhide\n\n# Read data for 1950\nd_wu_1950 <- lapply(excel_sheets(here(\"data/us1950.xlsx\")), \n            function(x) read_excel(here(\"data/us1950.xlsx\"), skip = 3, sheet = x)) %>%\n            reduce(left_join, by = \"Area\") %>% \n            clean_names() %>% \n            mutate_at(1:9, as.numeric) %>% \n            select(-note_industrial_and_thermoelectric_were_combined_in_1950) %>% \n            replace(is.na(.), 0)\n\n# Read data for 1955\nd_wu_1955 <- lapply(excel_sheets(here(\"data/us1955.xlsx\")), \n            function(x) read_excel(here(\"data/us1955.xlsx\"), skip = 3, sheet = x)) %>% \n            reduce(left_join, by = \"Area\") %>% \n            clean_names() %>% \n            mutate_at(1:11, as.numeric) %>% \n            select(-note_industrial_and_thermoelectric_were_combined_in_1955) %>% \n            replace(is.na(.), 0)\n\n# Read data for 1960\nd_wu_1960 <- lapply(excel_sheets(here(\"data/us1960.xlsx\")), \n             function(x) read_excel(here(\"data/us1960.xlsx\"), skip = 3, sheet = x)) %>% \n            reduce(left_join, by = \"Area\") %>% \n            clean_names() %>% \n            mutate_at(1:35, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 1965\nd_wu_1965 <- lapply(excel_sheets(here(\"data/us1965.xlsx\")), \n             function(x) read_excel(here(\"data/us1965.xlsx\"), skip = 3, sheet = x)) %>% \n            reduce(left_join, by = \"Area\") %>% \n            clean_names() %>% \n            mutate_at(1:33, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 1970\nd_wu_1970 <- lapply(excel_sheets(here(\"data/us1970.xlsx\")), \n             function(x) read_excel(here(\"data/us1970.xlsx\"), skip = 3, sheet = x)) %>% \n            reduce(left_join, by = \"Area\") %>% \n            clean_names() %>% \n            mutate_at(1:34, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 1975\nd_wu_1975 <- lapply(excel_sheets(here(\"data/us1975.xlsx\")), \n             function(x) read_excel(here(\"data/us1975.xlsx\"), skip = 3, sheet = x)) %>% \n            reduce(left_join, by = \"Area\") %>% \n            clean_names() %>% \n            mutate_at(1:34, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 1980\nd_wu_1980 <- lapply(excel_sheets(here(\"data/us1980.xlsx\")), \n              function(x) read_excel(here(\"data/us1980.xlsx\"), skip = 3, sheet = x)) %>% \n            reduce(left_join, by = \"Area\") %>% \n            clean_names() %>% \n            mutate_at(1:34, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 1985 (tab delimited text file)\nd_wu_1985 <- read_tsv(here(\"data/us1985.txt\")) %>% \n            clean_names() %>% \n            mutate_at(2, as.numeric) %>%\n            mutate_at(4:163, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 1990 (filter out STATE)\nd_wu_1990 <- read_xls(here(\"data/us1990.xls\")) %>% \n            clean_names() %>% \n            filter(state != class(character)) %>% \n            mutate_at(2, as.numeric) %>%\n            mutate_at(4:163, as.numeric) %>%\n            replace(is.na(.), 0)\n\n# Read data for 1995\nd_wu_1995 <- read_xls(here(\"data/us1995.xls\")) %>% \n            clean_names() %>% \n            mutate_at(1, as.numeric) %>% \n            mutate_at(3:4, as.numeric) %>% \n            mutate_at(6:252, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 2000\nd_wu_2000 <- read_xls(here(\"data/us2000.xls\")) %>% \n            clean_names() %>% \n            mutate_at(2:70, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 2005\nd_wu_2005 <- read_xls(here(\"data/us2005.xls\")) %>% \n            clean_names() %>% \n            mutate_at(2:4, as.numeric) %>% \n            mutate_at(6:108, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 2010\nd_wu_2010 <- read_xlsx(here(\"data/us2010.xlsx\")) %>% \n            clean_names() %>% \n            mutate_at(2, as.numeric) %>% \n            mutate_at(4:117, as.numeric) %>% \n            replace(is.na(.), 0)\n\n# Read data for 2015\nd_wu_2015 <- read_xlsx(here(\"data/us2015.xlsx\"), skip=1) %>% \n            clean_names() %>% \n            mutate_at(2, as.numeric) %>% \n            mutate_at(4:141, as.numeric) %>% \n            replace(is.na(.), 0)\n\n\n\nOrganize data by sector and FIPS\n(Federal Information Processing Standards)\n\n\nhide\n\n# Creating new object from data object 1950\nwu_1950 <- d_wu_1950 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, inpt_wgw_fr, inpt_wsw_fr) %>% \n  mutate(\"State\" = area, \n         \"Year\" = 1950, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr, \n         \"Rural\" = NA, \n         \"Industrial\" = inpt_wgw_fr + inpt_wsw_fr, \n         \"Thermoelectric\" = NA) %>% \nselect(State, Year, \"Public Supply\",  Irrigation, \n       Industrial, Rural, Thermoelectric) %>% \n  group_by(State) %>% \n  pivot_longer(3:7, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 1955\nwu_1955 <- d_wu_1955 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, inpt_wgw_fr, inpt_wsw_fr) %>% \n  mutate(\"State\" = area, \n         \"Year\" = 1955,\n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr, \n         \"Rural\" = NA, \n         \"Industrial\" = inpt_wgw_fr + inpt_wsw_fr, \n         \"Thermoelectric\" = NA) %>% \nselect(State, Year, \"Public Supply\",  Irrigation, \n       Industrial, Rural, Thermoelectric) %>% \n  group_by(State) %>% \n  pivot_longer(3:7, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 1960\n# 1. The irrigation sector tags ir_wgw_fr + ir_wsw_fr are empty and not suitable for use. \n# 2. We will use ir_w_fr_to, which is total self-supplied freshwater withdrawal. \n# For the future, we must be aware of using empty cells to display data,\n# especially when comparing to other years/sectors. \n# The lack of data could imply low values, when in reality, \n# the correct data just was not utilized.\nwu_1960 <- d_wu_1960 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_w_fr_to, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = area,\n         \"Year\" = 1960,\n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_w_fr_to,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + ls_wgw_fr + ls_wsw_fr,\n         \"Industrial\" = oi_wgw_fr + oi_wsw_fr,\n         \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr) %>% \n  select(State, Year, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric, )%>% \n  group_by(State) %>% \n  pivot_longer(3:7, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 1965\nwu_1965 <- d_wu_1965 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = area,\n         \"Year\" = 1965,\n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + ls_wgw_fr + ls_wsw_fr,\n         \"Industrial\" = oi_wgw_fr + oi_wsw_fr,\n         \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr) %>% \n  select(State, Year, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric, )%>% \n  group_by(State) %>% \n  pivot_longer(3:7, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 1970\nwu_1970 <- d_wu_1970 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = area, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + ls_wgw_fr + ls_wsw_fr,\n         \"Industrial\" = oi_wgw_fr + oi_wsw_fr,\n         \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr,\n         \"Year\" = 1970) %>% \n  select(State, Year, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric, )%>% \n  group_by(State) %>% \n  pivot_longer(3:7, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 1975\nwu_1975 <- d_wu_1975 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = area, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + ls_wgw_fr + ls_wsw_fr,\n         \"Industrial\" = oi_wgw_fr + oi_wsw_fr,\n         \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr,\n         \"Year\" = 1975) %>% \n  select(State, Year, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric, )%>% \n  group_by(State) %>% \n  pivot_longer(3:7, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 1980\nwu_1980 <- d_wu_1980 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = area, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + ls_wgw_fr + ls_wsw_fr,\n         \"Industrial\" = oi_wgw_fr + oi_wsw_fr,\n         \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr,\n         \"Year\" = 1980) %>% \n  select(State, Year, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric, )%>% \n  group_by(State) %>% \n  pivot_longer(3:7, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 1985\nwu_1985 <- d_wu_1985 %>% \n  select(scode, ps_wgwfr, ps_wswfr, ir_wgwfr, ir_wswfr,\n         do_ssgwf, do_ssswf, ls_gwtot, ls_swtot, mi_wgwfr,\n         mi_wswfr, in_wgwfr, in_wswfr, pt_wgwfr, pt_wswfr) %>% \n  mutate(\"State\" = scode, \n         \"Public Supply\" = ps_wgwfr + ps_wswfr, \n         \"Irrigation\" = ir_wgwfr + ir_wswfr,\n         \"Rural\" = do_ssgwf + do_ssswf + ls_gwtot + ls_swtot,\n         \"Industrial\" = mi_wgwfr + mi_wswfr + in_wgwfr + in_wswfr,\n         \"Thermoelectric\" = pt_wgwfr + pt_wswfr) %>% \n  select(State, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric) %>% \n  group_by(State) %>% \n  summarise(across(1:5,sum), Year = 1985) %>% \n  pivot_longer(2:6, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 1990\nwu_1990 <- d_wu_1990 %>% \n  select(scode, ps_wgwfr, ps_wswfr, ir_wgwfr, ir_wswfr,\n         do_ssgwf, do_ssswf, ls_gwtot, ls_swtot, mi_wgwfr,\n         mi_wswfr, in_wgwfr, in_wswfr, pt_wgwfr, pt_wswfr) %>% \n  mutate(\"State\" = scode, \n         \"Public Supply\" = ps_wgwfr + ps_wswfr, \n         \"Irrigation\" = ir_wgwfr + ir_wswfr,\n         \"Rural\" = do_ssgwf + do_ssswf + ls_gwtot + ls_swtot,\n         \"Industrial\" = mi_wgwfr + mi_wswfr + in_wgwfr + in_wswfr,\n         \"Thermoelectric\" = pt_wgwfr + pt_wswfr) %>% \n  select(State, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric) %>% \n  group_by(State) %>% \n  summarise(across(1:5,sum), Year = 1990) %>% \n  pivot_longer(2:6, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n\n# Creating new object from data object 1995\nwu_1995 <- d_wu_1995 %>% \n  select(year, state_code, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr,\n         do_wgw_fr, do_wsw_fr, ls_wgw_fr, ls_wsw_fr, mi_wgw_fr,\n         mi_wsw_fr, in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = state_code, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + ls_wgw_fr + ls_wsw_fr,\n         \"Industrial\" = mi_wgw_fr + mi_wsw_fr + in_wgw_fr + in_wsw_fr,\n         \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr) %>% \n  select(State, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric) %>% \n  group_by(State) %>% \n  summarise(across(1:5,sum), Year = 1995) %>% \n  pivot_longer(2:6, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 2000\nwu_2000 <- d_wu_2000 %>% \n  select(statefips, ps_wgw_fr, ps_wsw_fr, it_wgw_fr, it_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, mi_wgw_fr, mi_wsw_fr,\n         in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = statefips, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = it_wgw_fr + it_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + ls_wgw_fr + ls_wsw_fr,\n         \"Industrial\" = mi_wgw_fr + mi_wsw_fr + in_wgw_fr + in_wsw_fr,\n          \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr) %>% \n  select(State, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric) %>% \n  group_by(State) %>% \n  summarise(across(1:5,sum), Year = 2000) %>% \n  pivot_longer(2:6, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 2005\nwu_2005 <- d_wu_2005 %>% \n  select(statefips, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr,\n         do_wgw_fr, do_wsw_fr, ls_wgw_fr, ls_wsw_fr, mi_wgw_fr,\n         mi_wsw_fr, in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = statefips, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + ls_wgw_fr + ls_wsw_fr,\n         \"Industrial\" = mi_wgw_fr + mi_wsw_fr + in_wgw_fr + in_wsw_fr,\n         \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr) %>% \n  select(State, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric) %>% \n  group_by(State) %>% \n  summarise(across(1:5,sum), Year = 2005) %>% \n  pivot_longer(2:6, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 2010\nwu_2010 <- d_wu_2010 %>% \n  select(statefips, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr,\n         do_wgw_fr, do_wsw_fr, li_wgw_fr, li_wsw_fr, mi_wgw_fr,\n         mi_wsw_fr, in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = statefips, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + li_wgw_fr + li_wsw_fr,\n         \"Industrial\" = mi_wgw_fr + mi_wsw_fr + in_wgw_fr + in_wsw_fr,\n          \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr) %>% \n  select(State, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric) %>% \n  group_by(State) %>% \n  summarise(across(1:5,sum), Year = 2010) %>% \n  pivot_longer(2:6, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating new object from data object 2015\nwu_2015 <- d_wu_2015 %>% \n  select(statefips, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr,\n         do_wgw_fr, do_wsw_fr, li_wgw_fr, li_wsw_fr, mi_wgw_fr,\n         mi_wsw_fr, in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr) %>% \n  mutate(\"State\" = statefips, \n         \"Public Supply\" = ps_wgw_fr + ps_wsw_fr, \n         \"Irrigation\" = ir_wgw_fr + ir_wsw_fr,\n         \"Rural\" = do_wgw_fr + do_wsw_fr + li_wgw_fr + li_wsw_fr,\n         \"Industrial\" = mi_wgw_fr + mi_wsw_fr + in_wgw_fr + in_wsw_fr,\n          \"Thermoelectric\" = pt_wgw_fr + pt_wsw_fr) %>% \n  select(State, \"Public Supply\", Irrigation, Rural, Industrial, Thermoelectric) %>% \n  group_by(State) %>% \n  summarise(across(1:5,sum), Year = 2015) %>% \n  pivot_longer(2:6, names_to = \"Sectors\", values_to = \"Withdrawals\")\n\n# Creating a separate object that calls the data object allows us\n# to manipulate the data object while preserving the original data.\n\n\n\nData visualizations\nWrangle data for plotting\n3500 observations come from combining all the data from the 14 years and filtering out Puerto Rico, Virgin Islands, District of Columbia, and any 0 values. The unique() function allows us to check if there are 50 states. Each column is organized into state, year, sectors, and withdrawal values.\n\n\nhide\n\nwu_all <- rbind(wu_1950, wu_1955, wu_1960, wu_1965, wu_1970,\n                wu_1975, wu_1980, wu_1985, wu_1990, wu_1995, wu_2000,\n                wu_2005, wu_2010, wu_2015) %>% \n  replace(is.na(.), 0) %>% \n  filter(State != 0,\n         State != 11,\n         State != 72,\n         State != 78)\n\n# Check for 50 FIPS \nunique_check <- unique(wu_all[1])\n\n# Step 2.3: Prepare for Plot\nwu_all_plot <- wu_all %>% \n  replace(is.na(.), 0) %>% \n  select(Year, Withdrawals) %>% \n  group_by(Year) %>% \n  summarize(Withdrawals = sum(Withdrawals))\n\n# Step 2.4: Plot\nggplot() +\n  geom_line(data = wu_all_plot, aes(x = Year, y = Withdrawals),\n            color = \"dodgerblue\", size = 2) +\n  # geom_label: creates labels for each data point on plot\n  # label:adjusts what the label is; controls # of sig figs, changes text size\n  geom_label(data = wu_all_plot, aes(x = Year,\n                                     y = Withdrawals,\n                                     label = scales::comma(signif(Withdrawals, 3))),\n             size = 1.5) +\n  labs(x = \"Year\",\n       y = \"Withdrawals (Mgal/day)\",\n       caption = \"Figure 1: Total Fresh Withdrawals in the USA 1950-2015. \n       (Plot created by Tiffany Hsu. Data from USGS (2015)).\") +\n  theme(axis.text = element_text(color=\"grey\", size = 8),\n        axis.ticks.x = element_blank(),\n        axis.ticks.y = element_blank(),\n        panel.background = element_blank(),\n        panel.grid.major = element_line(size = 0.1, color = \"grey\"),\n        plot.caption = element_text(hjust = 0, size = 10, face = \"bold\"),\n        # legend.position: empty quotes mean there is no legend\n        legend.position = \"\") +\n  # scale_x_continuous: vertical grid lines are tighter, all the years appear on x-axis\n  # scale_y_continuous: increases # of horizontal grid lines, more increments on y-axis\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +\n  scale_y_continuous(breaks = scales::pretty_breaks(n = 10), limits = c(0, 380000))\n\n\n\n\nOrganize data for plottng timeseries of sectoral withdrawals\n\n\nhide\n\n# Creating new object totaling withdrawals from each sector by Year\nwu_all_sectors <- wu_all %>% \n  replace(is.na(.),0) %>% \n  group_by(Sectors, Year) %>% \n  summarize(Withdrawals = sum(Withdrawals))\n\nwu_all_check <- wu_all_sectors %>%\n  select(Sectors, Withdrawals) %>% \n  group_by(Sectors) %>% \n  summarise(Withdrawals =sum(Withdrawals))\n\n# Plot figure 2\nggplot() +\n  geom_col(data=wu_all_sectors, \n           aes(Year, Withdrawals, fill = reorder(Sectors, Withdrawals)), \n           position = position_dodge(3.5), \n           width = 4) + \n  \n  # The line plot function itself does not include points so geom_point allows us to\n  # customize the points and overlay it on the line.\n  geom_line(data=wu_all_plot, \n            aes(x=Year, y=Withdrawals / 2,), \n            color = \"grey\", \n            size= 1) +\n  geom_point(data=wu_all_plot, \n             aes(x=Year, y=Withdrawals/ 2), \n             color = \"grey\", \n             size= 2, \n             fill=\"grey\") +\n  scale_x_continuous(breaks = pretty_breaks(n = 14)) + \n  \n  # The function below gets rid of the year 1945 and 2020.\n  coord_cartesian(expand = FALSE) +\n  \n  scale_y_continuous(\n    name = \"Sector Withdrawals (Mgal/day)\", \n    breaks = pretty_breaks(n = 10), \n    labels = label_comma(), \n    limits = c(0, 200000),\n    \n    # expand = c(0,0) gets rid of the space between the axis and the columns\n    expand = c(0,0),\n    \n    # The trans argument transforms the axes unit by multiplying the values by 2 to match\n    # the units we want for total withdrawals. We multiply by 2 because the units of the \n    # second axis is double that of the first y-axis. However, transforming the axis units\n    # also transformed the y values in our data. For this reason, we have to divide the \n    # Withdrawals value by 2.\n    sec.axis = sec_axis(trans =~.*2, \n                        name = \"Total Withdrawals (Mgal/day)\", \n                        breaks = pretty_breaks(n=10), \n                        labels = label_comma())) +\n  labs(x = \"Year\",\n       y = \"Sector Withdrawals (Mgal/day)\",\n       caption = \"Figure 2: Total Fresh Withdrawals in the USA 1950-2015.\",\n       fill = \"\") +\n  \n  # theme_few adds borders around the plot \n  theme_few() +\n  theme(axis.text = element_text(color=\"black\", size = 8),\n        axis.text.y.right = element_text(color = \"grey\"),\n        axis.title.y.right = element_text(color = \"grey\"),\n        plot.caption = element_text(hjust = 0, size = 10, face = \"bold\"),\n        legend.position = \"top\") +\n  scale_fill_manual(values = c(\"turquoise\",\n                               \"cornflowerblue\",\n                               \"brown3\",\n                               \"sienna1\",\n                               \"olivedrab3\")) \n\n\n\n\nKey Takeaway:\nFrom the plot, we can conclude that 1980 peaked in water withdrawal amounts. After 1980, water withdrawals saw a slight decrease. This could be due to implementation of water conservation practices. Thermoelectric water use saw a large increase from 1950 compared to 1980. Irrigation and thermoelectric water maintain their role as the sectors contributing to the most withdrawals over time. Increases in irrigation could be due to an increasing population and demand of food supply. Industrial water use also declined sharply from the years 1950 in comparison to 1960.\nMy plot’s data appear to be different than the USGS plot. The bars in the USGS plot show different patterns than my plot.\nThe USGS plot has the y-axis units in withdrawals in billion gallons per day, whereas our plot uses withdrawals in Mgal per day.\nThe line plot also has empty points instead of filled in dots.\nThe withdrawal order is also different; where we begin with rural supply, the USGS plot begins with public supply. USGS also grouped the industrial sector along with mining and aquaculture data, however, we only used industrial data.\nThe columns are also outlined in black, in our plot, there is no outline present.\nIn the USGS plot, there is additional space to the right of the last column of 2015.\nUSGS plots total withdrawals while our plot only includes freshwater withdrawals.\nOrganize data for plotting timeseries of sectoral withdrawals for NEW YORK\n\n\nhide\n\nwu_ny <- wu_all %>% \n  filter(State == 32) %>% \n  group_by(Sectors, Year) %>% \n  summarize(Withdrawals = sum(Withdrawals))\n\nwu_ny_total <- wu_all %>% \n  filter(State == 32) %>% \n  select(Year, Withdrawals) %>% \n  group_by(Year) %>% \n  summarize(Withdrawals = sum(Withdrawals))\n\n# Plot NY timeseries\nggplot() +\n  geom_col(data= wu_ny, \n           aes(Year, Withdrawals, fill = reorder(Sectors, Withdrawals)), \n           position = position_dodge(3.5), \n           width = 4) + \n  \n  geom_line(data= wu_ny_total, \n            aes(x=Year, y=Withdrawals), \n            color = \"grey\", \n            size= 1) +\n  \n  geom_point(data= wu_ny_total, \n             aes(x=Year, y=Withdrawals), \n             color = \"grey\", \n             size= 2, \n             fill=\"grey\") +\n  \n  scale_x_continuous(breaks = pretty_breaks(n = 14)) + \n  \n  coord_cartesian(expand = FALSE) +\n  \n  scale_y_continuous(\n    name = \"Sector Withdrawals (Mgal/day)\", \n    breaks = pretty_breaks(n = 10), \n    labels = label_comma(), \n    limits = c(0, 4000),\n    expand = c(0,0),\n    \n    # I picked a one-for-one transformation because the irrigation sector values \n    # were so high that the bars would overlap with the line plot. When I tried \n    # keeping the original transformation for 2, the line plot appeared over the \n    # bars and became hard to read/interpret.\n    sec.axis = sec_axis(trans =~.*1, \n                        name = \"Total Withdrawals (Mgal/day)\", \n                        breaks = pretty_breaks(n=10), \n                        labels = label_comma())) +\n  \n  labs(x = \"Year\",\n       y = \"Sector Withdrawals (Mgal/day)\",\n       caption = \"Figure 3: Fresh Withdrawals in NY 1950-2015.\",\n       fill = \"\") +\n\n  theme_few() +\n  \n  theme(axis.text = element_text(color=\"black\", size = 8),\n        axis.text.y.right = element_text(color = \"grey\"),\n        axis.title.y.right = element_text(color = \"grey\"),\n        plot.caption = element_text(hjust = 0, size = 10, face = \"bold\"),\n        legend.position = \"top\") +\n  \n  scale_fill_manual(values = c(\"turquoise\",\n                               \"sienna1\",\n                               \"brown3\",\n                               \"cornflowerblue\",\n                               \"olivedrab3\")) \n\n\n\n\nKey Takeaway:\nTotal water withdrawals reached the highest levels in 1985 and have declined. The irrigation sector has the highest levels in comparison to the other sectors in New York. The second largest sector is public supply. New York appears to have similar patterns with California, both of which have overwhelmingly high levels of irrigation withdrawals and have public supply as second in lead.\nUSA vs. NY Sector Withdrawal Plot Differences\nThe main difference between NY and USA is high withdrawals for the thermoelectric sector. In NY, irrigation values take the lead. This is likely due to the large role of agriculture in NY. In addition, rural and thermoelectric values are practically nonexistent in NY. In the USA, the withdrawals peak in the year 1980 where NY peaks in 1985. The total withdrawals in NY also appear like more of a dome from the years 1970-1995 where the USA plot reaches a sharp peak and then a linear decrease into a plateau.\nComparing Irrigation and Public Supply Withdrawals by State\n\n\nhide\n\nfips <- d_wu_2015 %>% \n  select(state, State = statefips) %>% \n  unique() %>% \n  filter(!State %in% c(0, 11, 72, 78)) \n\nps_all <- wu_all %>% \n  replace(is.na(.), 0) %>% \n  filter(Sectors == \"Public Supply\") %>% \n  inner_join(fips, by = \"State\")\n\nir_all <- wu_all %>% \n  replace(is.na(.), 0) %>% \n  filter(Sectors == \"Irrigation\") %>% \n  inner_join(fips, by = \"State\")  \n\ndata1 <- c(\"ps_all\", \"ir_all\")\n\ncap <- c(\"Figure 4: Public Supply by state. Data from USGS (2015). \n         Created by Tiffany Hsu.\", \"Figure 5: Irrigation by state. Data from USGS (2015). \n         Created by Tiffany Hsu.\")\n\nmyplot <- function(data1, cap) {\n ggplot() +\n    geom_line(data = data1,\n              aes(x= Year, y = Withdrawals, color = state), size = 1) +\n    scale_color_manual(values = rep(c(\"darkblue\", \"royalblue4\", \"steelblue3\",\n                                         \"dodgerblue2\", \"skyblue\"), 10)) +\n    \n    gghighlight(max(Withdrawals), max_highlight = 5L,\n                unhighlighted_params = list(size = .5, color = alpha(\"grey\", 0.4)),\n                label_params = list(size = 3, fill = \"white\", fontface = \"bold\",\n                                    color = c(\"darkblue\", \"royalblue4\", \"steelblue3\",\n                                              \"dodgerblue2\", \"skyblue\"))) + \n    scale_x_continuous(breaks = breaks_pretty(n = 15),\n                         expand = c(0,1)) +\n    scale_y_continuous(breaks = breaks_pretty(n = 7),\n                         expand = c(0,0),\n                         labels = label_comma()) +\n      \n      # add captions and labels\n      labs(caption = cap,\n           x = \"\\nYear\\n\",\n           y = \"Withdrawals (Mgal/day)\\n\") +\n      \n      theme(axis.text = element_text(color = \"black\", size = 10),\n            panel.background = element_blank(),\n            axis.line = element_line(color = \"black\"),\n            plot.caption = element_text(hjust = 0, size = 12, face = \"bold\"),\n            legend.position = \"\")\n}\n\n# create a for loop that sequences from 1 to the # of entries in data 1\n for(i in seq_along(data1)){\n  print(myplot(get(data1[i]), cap[i]))\n }\n\n\n\n\nKey Takeaway:\nAccording to the plot, CA remains the state with the highest withdrawal values by both public supply and irrigation. California and Texas are also the only states that appear in the top five of both top five of public supply and irrigation withdrawals.\nOrganize data for plotting timeseries of withdrawals by source\n\n\nhide\n\n# Creating GW object from data object 1965\nsource_wu_1965 <- d_wu_1965 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr, tp_tot_pop) %>% \n  mutate(\"State\" = area,\n         \"Population\" = tp_tot_pop,\n         \"SW\" =  ir_wsw_fr + ps_wsw_fr + do_wsw_fr + ls_wsw_fr + oi_wsw_fr + pt_wsw_fr,\n         \"GW\" = ir_wgw_fr + ps_wgw_fr + do_wgw_fr + ls_wgw_fr + oi_wgw_fr + pt_wgw_fr,\n         \"Total\" = GW + SW,\n         \"Year\" = 1965) %>% \n  select(State, Population, SW, GW, Total, Year) %>% \n  group_by(State) %>% \n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n# Creating GW object from data object 1970\nsource_wu_1970 <- d_wu_1970 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr, tp_tot_pop) %>% \n  mutate(\"State\" = area,\n         \"Population\" = tp_tot_pop,\n         \"SW\" =  ir_wsw_fr + ps_wsw_fr + do_wsw_fr + ls_wsw_fr + oi_wsw_fr + pt_wsw_fr,\n         \"GW\" = ir_wgw_fr + ps_wgw_fr + do_wgw_fr + ls_wgw_fr + oi_wgw_fr + pt_wgw_fr,\n         \"Total\" = GW + SW,\n         \"Year\" = 1970) %>% \n  select(State, Population, SW, GW, Total, Year) %>% \n  group_by(State) %>% \n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n# Creating GW object from data object 1975\nsource_wu_1975 <- d_wu_1975 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr, tp_tot_pop) %>% \n  mutate(\"State\" = area,\n         \"Population\" = tp_tot_pop,\n         \"SW\" =  ir_wsw_fr + ps_wsw_fr + do_wsw_fr + ls_wsw_fr + oi_wsw_fr + pt_wsw_fr,\n         \"GW\" = ir_wgw_fr + ps_wgw_fr + do_wgw_fr + ls_wgw_fr + oi_wgw_fr + pt_wgw_fr,\n         \"Total\" = GW + SW,\n         \"Year\" = 1975) %>% \n  select(State, Population, SW, GW, Total, Year) %>% \n  group_by(State) %>% \n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n# Creating GW object from data object 1980\nsource_wu_1980 <- d_wu_1980 %>% \n  select(area, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, oi_wgw_fr, oi_wsw_fr, pt_wgw_fr, pt_wsw_fr, tp_tot_pop) %>% \n  mutate(\"State\" = area,\n         \"Population\" = tp_tot_pop,\n         \"SW\" =  ir_wsw_fr + ps_wsw_fr + do_wsw_fr + ls_wsw_fr + oi_wsw_fr + pt_wsw_fr,\n         \"GW\" = ir_wgw_fr + ps_wgw_fr + do_wgw_fr + ls_wgw_fr + oi_wgw_fr + pt_wgw_fr,\n         \"Total\" = GW + SW,\n         \"Year\" = 1980) %>% \n  select(State, Population, SW, GW, Total, Year) %>% \n  group_by(State) %>% \n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n# Creating GW object from data object 1985\nsource_wu_1985 <- d_wu_1985 %>% \n  select(scode, ps_wgwfr, ps_wswfr, ir_wgwfr, ir_wswfr,\n         do_ssgwf, do_ssswf, ls_gwtot, ls_swtot, mi_wgwfr,\n         mi_wswfr, in_wgwfr, in_wswfr, pt_wgwfr, pt_wswfr, po_total) %>% \n  mutate(\"State\" = scode,\n         \"Population\" = po_total,\n         \"SW\" =  ir_wswfr + ps_wswfr + do_ssswf + ls_swtot + in_wswfr + \n           pt_wswfr + mi_wswfr,\n         \"GW\" = ir_wgwfr + ps_wgwfr + do_ssgwf + ls_gwtot + in_wgwfr + \n           pt_wgwfr + mi_wgwfr,\n         \"Total\" = GW + SW) %>% \n  select(State, Population, SW, GW, Total) %>% \n  group_by(State) %>% \n  summarise(across(1:4,sum), Year = 1985) %>% \n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n# Creating GW object from data object 1990\nsource_wu_1990 <- d_wu_1990 %>% \n  select(scode, ps_wgwfr, ps_wswfr, ir_wgwfr, ir_wswfr,\n         do_ssgwf, do_ssswf, ls_gwtot, ls_swtot, mi_wgwfr,\n         mi_wswfr, in_wgwfr, in_wswfr, pt_wgwfr, pt_wswfr, po_total) %>% \n  mutate(\"State\" = scode,\n         \"Population\" = po_total,\n         \"SW\" =  ir_wswfr + ps_wswfr + do_ssswf + ls_swtot + in_wswfr + pt_wswfr + \n           mi_wswfr,\n         \"GW\" = ir_wgwfr + ps_wgwfr + do_ssgwf + ls_gwtot + in_wgwfr + pt_wgwfr + \n           mi_wgwfr,\n         \"Total\" = GW + SW) %>%\n  select(State, Population, SW, GW, Total) %>% \n  group_by(State) %>% \n  summarise(across(1:4,sum), Year = 1990) %>% \n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n \n# Creating GW object from data object 1995\nsource_wu_1995 <- d_wu_1995 %>% \n  select(year, state_code, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr,\n         do_wgw_fr, do_wsw_fr, ls_wgw_fr, ls_wsw_fr, mi_wgw_fr,\n         mi_wsw_fr, in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr, total_pop)%>% \n  mutate(\"State\" = state_code,\n         \"Population\" = total_pop,\n         \"SW\" =  ir_wsw_fr + ps_wsw_fr + do_wsw_fr + ls_wsw_fr + in_wsw_fr + pt_wsw_fr + \n           mi_wsw_fr,\n         \"GW\" = ir_wgw_fr + ps_wgw_fr + do_wgw_fr + ls_wgw_fr + in_wgw_fr + pt_wgw_fr + \n           mi_wgw_fr,\n         \"Total\" = GW + SW,\n         \"Year\" = year) %>% \n  select(State, Population, SW, GW, Total) %>% \n  group_by(State) %>% \n  summarise(across(1:4,sum), Year = 1995) %>%\n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n\n# Creating GW object from data object 2000\nsource_wu_2000 <- d_wu_2000 %>% \n  select(statefips, ps_wgw_fr, ps_wsw_fr, it_wgw_fr, it_wsw_fr, do_wgw_fr, do_wsw_fr,\n         ls_wgw_fr, ls_wsw_fr, mi_wgw_fr, mi_wsw_fr,\n         in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr, tp_tot_pop)%>% \n  mutate(\"State\" = statefips,\n         \"Population\" = tp_tot_pop,\n         \"SW\" =  it_wsw_fr + ps_wsw_fr + do_wsw_fr + ls_wsw_fr + in_wsw_fr + pt_wsw_fr + \n           mi_wsw_fr,\n         \"GW\" = it_wgw_fr + ps_wgw_fr + do_wgw_fr + ls_wgw_fr + in_wgw_fr + pt_wgw_fr + \n           mi_wgw_fr,\n         \"Total\" = GW + SW) %>% \n  select(State, Population, SW, GW, Total) %>% \n  group_by(State) %>% \n  summarise(across(1:4,sum), Year = 2000) %>%\n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n# Creating GW object from data object 2005\nsource_wu_2005 <- d_wu_2005 %>% \n  select(statefips, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr,\n         do_wgw_fr, do_wsw_fr, ls_wgw_fr, ls_wsw_fr, mi_wgw_fr,\n         mi_wsw_fr, in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr, tp_tot_pop)%>% \n  mutate(\"State\" = statefips,\n         \"Population\" = tp_tot_pop,\n         \"SW\" =  ir_wsw_fr + ps_wsw_fr + do_wsw_fr + ls_wsw_fr + in_wsw_fr + pt_wsw_fr + \n           mi_wsw_fr,\n         \"GW\" = ir_wgw_fr + ps_wgw_fr + do_wgw_fr + ls_wgw_fr + in_wgw_fr + pt_wgw_fr + \n           mi_wgw_fr,\n         \"Total\" = GW + SW) %>% \n  select(State, Population, SW, GW, Total) %>% \n  group_by(State) %>% \n  summarise(across(1:4,sum), Year = 2005) %>%\n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n# Creating GW object from data object 2010\nsource_wu_2010 <- d_wu_2010 %>% \n  select(statefips, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr,\n         do_wgw_fr, do_wsw_fr, li_wgw_fr, li_wsw_fr, mi_wgw_fr,\n         mi_wsw_fr, in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr, tp_tot_pop)%>% \n  mutate(\"State\" = statefips,\n         \"Population\" = tp_tot_pop,\n         \"SW\" =  ir_wsw_fr + ps_wsw_fr + do_wsw_fr  + in_wsw_fr + pt_wsw_fr + mi_wsw_fr +\n           li_wsw_fr,\n         \"GW\" = ir_wgw_fr + ps_wgw_fr + do_wgw_fr + li_wgw_fr + in_wgw_fr + pt_wgw_fr + \n           mi_wgw_fr,\n         \"Total\" = GW + SW) %>% \n  select(State, Population, SW, GW, Total) %>% \n  group_by(State) %>% \n  summarise(across(1:4,sum), Year = 2010) %>%\n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\n# Creating GW object from data object 2015\nsource_wu_2015 <- d_wu_2015 %>% \n  select(statefips, ps_wgw_fr, ps_wsw_fr, ir_wgw_fr, ir_wsw_fr,\n         do_wgw_fr, do_wsw_fr, li_wgw_fr, li_wsw_fr, mi_wgw_fr,\n         mi_wsw_fr, in_wgw_fr, in_wsw_fr, pt_wgw_fr, pt_wsw_fr, tp_tot_pop)%>% \n  mutate(\"State\" = statefips,\n         \"Population\" = tp_tot_pop,\n         \"SW\" =  ir_wsw_fr + ps_wsw_fr + do_wsw_fr  + in_wsw_fr + pt_wsw_fr + mi_wsw_fr + \n           li_wsw_fr,\n         \"GW\" = ir_wgw_fr + ps_wgw_fr + do_wgw_fr + li_wgw_fr + in_wgw_fr + pt_wgw_fr + \n           mi_wgw_fr,\n         \"Total\" = GW + SW) %>% \n  select(State, Population, SW, GW, Total) %>% \n  group_by(State) %>% \n  summarise(across(1:4,sum), Year = 2015) %>%\n  pivot_longer(3:5, names_to = \"Source\", values_to = \"Withdrawals\")\n\nwu_all_source <- rbind(source_wu_1965, source_wu_1970, source_wu_1975, source_wu_1980,\n                       source_wu_1985, source_wu_1990, source_wu_1995, source_wu_2000,\n                       source_wu_2005, source_wu_2010, source_wu_2015) %>% \n  filter(State != 0,\n         State != 11,\n         State != 72,\n         State != 78)\n\npopulation <- wu_all_source %>% \n  filter(Source == \"Total\") %>% \n  select(Population, Year) %>% \n  group_by(Year) %>% \n  summarise(across(2, sum))\n\nsource <- wu_all_source %>%\n  select(Year, Source, Withdrawals) %>% \n  group_by(Source, Year) %>% \n  summarise(Withdrawals = sum(Withdrawals))\n\n#Plot figure 6\nggplot() +\n  geom_col(data= source, \n           aes(Year, Withdrawals, fill = reorder(Source, Withdrawals)), \n           position = position_dodge(3.5), \n           width = 4,\n           color = \"black\") + \n  \n  geom_line(data= population, \n            aes(x=Year, y=Population, linetype = \"Population\"), \n            color = \"hotpink\", \n            size= 2) +\n\n  \n  scale_x_continuous(breaks = pretty_breaks(n = 14))  +\n  \n  scale_y_continuous(\n    name = \"Withdrawals (Mgal/day)\", \n    breaks = pretty_breaks(n = 10), \n    labels = label_comma(), \n    limits = c(0, 400000),\n    expand = c(0,0),\n    sec.axis = sec_axis(trans =~.*0.001, \n                        name = \"Population (Millions)\", \n                        breaks = pretty_breaks(n=10), \n                        labels = label_comma())) +\n  labs(x = \"Year\",\n       y = \"Withdrawals (Mgal/day)\",\n       caption = \n       \"Figure 6: Trends in population and fresh water withdrawals by source in USA.\n       Data from USGS (1965-2015).\",\n       fill = \"\") +\n  theme_few() +\n  theme(axis.text = element_text(color=\"black\", size = 8),\n        axis.text.y.right = element_text(color = \"hotpink\", size = 8),\n        axis.title.y.right = element_text(color = \"hotpink\",\n                                          margin = margin(t = 0, r = 0, b = 0, l = 20)),\n        axis.title.y.left = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),\n        plot.caption = element_text(hjust = 0, size = 10, face = \"bold\"),\n        legend.position = \"top\",\n        legend.title = element_blank()) +\n  scale_fill_manual(values = c(\"slategray2\", \"deepskyblue\", \"blue3\"))\n\n\n\n\nKey Takeaway:\nConsistent with the previous plots, 1980 saw the highest spike in total withdrawals. Surface water consistently remains the most used source of water in comparison to groundwater. Surface water may come from rivers, lakes, reservoirs, streams, and oceans and be used for public supply and irrigation. A potential reason why groundwater withdrawals are not as high as surface water could be because groundwater needs to be pumped out from underground.\nThis plot juxtaposes water use and population.\nInterestingly, population is increasing linearly while there is a slight decline in withdrawals starting from 2010. This could be due to new regulations and more efficient technology in the water industry.\nOrganize data for plotting timeseries of gw and sw withdrawals for New York\n\n\nhide\n\nwu_ny_source <- rbind(source_wu_1965, source_wu_1970, source_wu_1975, source_wu_1980,\n                      source_wu_1985, source_wu_1990, source_wu_1995, source_wu_2000,\n                      source_wu_2005, source_wu_2010, source_wu_2015) %>% \n  replace(is.na(.), 0) %>% \n  filter(State == 36,\n         State != 0,\n         State != 11,\n         State != 72,\n         State != 78)\n\npopulation_ny <- wu_ny_source %>% \n  filter(Source == \"Total\") %>% \n  select(Population, Year) %>% \n  group_by(Year) %>% \n  summarise(across(2, sum))\n\nsource_ny <- wu_ny_source %>%\n  select(Year, Source, Withdrawals) %>% \n  group_by(Source, Year) %>% \n  summarise(Withdrawals = sum(Withdrawals))\n\n\nggplot() +\n\n  geom_col(data= source_ny, \n           aes(Year, Withdrawals, fill = reorder(Source, Withdrawals)), \n           position = position_dodge(3.5), \n           width = 4,\n           color = \"black\") + \n  \n    geom_line(data= population_ny, \n            aes(x=Year, y=Population / 2, linetype = \"Population\"), \n            color = \"hotpink\", \n            size= 2) +\n  \n  scale_x_continuous(breaks = pretty_breaks(n = 14))  +\n  \n  scale_y_continuous(\n    name = \"Withdrawals (Mgal/day)\", \n    breaks = pretty_breaks(n = 10), \n    labels = label_comma(), \n    limits = c(0, 12500),\n    expand = c(0,0),\n    sec.axis = sec_axis(trans =~./500, \n                        name = \"Population (Millions)\", \n                        breaks = pretty_breaks(n=10), \n                        labels = label_comma())) +\n  labs(x = \"Year\",\n       y = \"Withdrawals (Mgal/day)\",\n       caption = \n       \"Figure 7: Trends in population and fresh water withdrawals by source in NY.\n       Data from USGS (1965-2015).\",\n       fill = \"\") +\n  theme_few() +\n  theme(axis.text = element_text(color=\"black\", size = 8),\n        axis.text.y.right = element_text(color = \"hotpink\", size = 8),\n        axis.title.y.right = element_text(color = \"hotpink\",\n                                          margin = margin(t = 0, r = 0, b = 0, l = 20)),\n        axis.title.y.left = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),\n        plot.caption = element_text(hjust = 0, size = 10, face = \"bold\"),\n        legend.position = \"top\",\n        legend.title = element_blank()) +\n  scale_fill_manual(values = c(\"slategray2\", \"deepskyblue\", \"blue3\"))\n\n\n\n\nKey Takeaway:\nSurface water is once again the most used source of withdrawals over time. Groundwater withdrawals are consistently low throughout 1965-2015. Peak withdrawals occurred during 1975 and have varied since. 2015 actually reveals the lowest withdrawal levels and hopefully continues on a downward trend.\nThis plot juxtaposes water use and population.\nNY sees a peak in population starting from around 1975, where water use was the highest ever recorded. Although the population is increasing at high rates, water withdrawals are actually decreasing (shown by 2010 and 2015).\nUSA vs. NY Source Withdrawal Plot Differences\nIn comparison to the overall USA withdrawals by source, NY has more variance in population levels as 1975 shows a boom in population and withdrawals. However, both NY and USA plots show surface water as the more widely used source of withdrawals. While the USA map already demonstrated surface water as a clear lead by source, NY demonstrates an even more stark comparison between groundwater and surface water in the years 1965-2015. In exploring the relationship between population and water withdrawals, the USA plot reveal an inverse relationship of increasing population and decreasing withdrawals while the NY plot demonstrates an almost steady population level with fluxes of increasing and decreasing withdrawals.\n\n\n\n",
    "preview": "posts/2022-02-16-project2/project2_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2022-02-16T14:17:47-08:00",
    "input_file": {}
  }
]
